{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\cloud computing\\\\car rental\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VehicleList from './VehicleList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]); // Initial state as an empty array\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    // Fetch users and vehicles\n    const fetchUsersAndVehicles = async () => {\n      try {\n        const usersResponse = await axios.get('http://localhost:5000/api/users');\n        console.log('Users Response:', usersResponse.data); // Log the response to inspect it\n\n        // Correctly access the 'users' array from the response\n        if (Array.isArray(usersResponse.data.users)) {\n          setUsers(usersResponse.data.users); // Set users from the 'users' key in the response\n        } else {\n          console.error('The users data is not an array');\n          setUsers([]); // Fallback to an empty array if it's not an array\n        }\n        const vehiclesResponse = await axios.get('http://localhost:5000/api/vehicles');\n        setVehicles(vehiclesResponse.data);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    };\n    fetchUsersAndVehicles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), Array.isArray(users) && users.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.email]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VehicleList, {\n      vehicles: vehicles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"bjJszWwbslEQRpsGE3m/rSMeBkg=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","VehicleList","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","vehicles","setVehicles","fetchUsersAndVehicles","usersResponse","get","console","log","data","Array","isArray","error","vehiclesResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","name","email","_id","_c","$RefreshReg$"],"sources":["D:/work/cloud computing/car rental/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport VehicleList from './VehicleList';\r\n\r\nfunction AdminDashboard() {\r\n  const [users, setUsers] = useState([]);  // Initial state as an empty array\r\n  const [vehicles, setVehicles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch users and vehicles\r\n    const fetchUsersAndVehicles = async () => {\r\n      try {\r\n        const usersResponse = await axios.get('http://localhost:5000/api/users');\r\n        console.log('Users Response:', usersResponse.data);  // Log the response to inspect it\r\n        \r\n        // Correctly access the 'users' array from the response\r\n        if (Array.isArray(usersResponse.data.users)) {\r\n          setUsers(usersResponse.data.users);  // Set users from the 'users' key in the response\r\n        } else {\r\n          console.error('The users data is not an array');\r\n          setUsers([]);  // Fallback to an empty array if it's not an array\r\n        }\r\n\r\n        const vehiclesResponse = await axios.get('http://localhost:5000/api/vehicles');\r\n        setVehicles(vehiclesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n      }\r\n    };\r\n\r\n    fetchUsersAndVehicles();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n\r\n      <h2>Users</h2>\r\n      {Array.isArray(users) && users.length > 0 ? (\r\n        <ul>\r\n          {users.map((user) => (\r\n            <li key={user._id}>{user.name} - {user.email}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No users found</p>\r\n      )}\r\n\r\n      <h2>Vehicles</h2>\r\n      <VehicleList vehicles={vehicles} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}